@page "/users/create"

@using Microsoft.EntityFrameworkCore
@using BlazorApp01.Models
@inject IDbContextFactory<BlazorApp01.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h4>Users</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Users" OnValidSubmit="AddUsers" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="name" class="form-label">Name:</label> 
                <InputText id="name" @bind-Value="Users.Name" class="form-control" /> 
                <ValidationMessage For="() => Users.Name" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="email" class="form-label">Email:</label> 
                <InputText id="email" @bind-Value="Users.Email" class="form-control" /> 
                <ValidationMessage For="() => Users.Email" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="password" class="form-label">Password:</label> 
                <InputText id="password" @bind-Value="Users.Password" class="form-control" /> 
                <ValidationMessage For="() => Users.Password" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="dob" class="form-label">Dob:</label> 
                <InputDate id="dob" @bind-Value="Users.Dob" class="form-control" /> 
                <ValidationMessage For="() => Users.Dob" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="address" class="form-label">Address:</label> 
                <InputText id="address" @bind-Value="Users.Address" class="form-control" /> 
                <ValidationMessage For="() => Users.Address" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="sex" class="form-label">Sex:</label> 
                <InputText id="sex" @bind-Value="Users.Sex" class="form-control" /> 
                <ValidationMessage For="() => Users.Sex" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="roleid" class="form-label">RoleId:</label> 
                <InputSelect id="roleid" @bind-Value="Users.RoleId" class="form-control">
                    @foreach (var role in Roles)
                    {
                        <option value="@role.Id">@role.Name</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => Users.RoleId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a class="btn btn-success mt-3" href="/users">Back to List</a>
</div>

@code {

    [SupplyParameterFromForm]
    public Users Users { get; set; } = new();
    public List<Roles> Roles { get; set; } = new();
    protected override async Task OnInitializedAsync()

    {
        using var context = DbFactory.CreateDbContext();
        Roles = await context.Roles.ToListAsync();
    }
    // To protect from overposting attacks, see https://aka.ms/RazorPagesCRUD
    public async Task AddUsers()
    {
        using var context = DbFactory.CreateDbContext();
        context.Users.Add(Users);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
