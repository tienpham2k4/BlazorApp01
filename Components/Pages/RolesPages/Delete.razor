@page "/roles/delete"

@using Microsoft.EntityFrameworkCore
@using BlazorApp01.Models
@inject IDbContextFactory<BlazorApp01.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager


<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>Roles</h4>
    <hr />
    @if (roles is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name</dt>
            <dd class="col-sm-10">@roles.Name</dd>
        </dl>
        <EditForm method="post" Model="roles" OnValidSubmit="DeleteRoles" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(roles is null)">Delete</button>
            <a class="btn btn-success"  href="/roles">Back to List</a>
        </EditForm>
    }
</div>

@code {
    Roles? roles;

    [SupplyParameterFromQuery]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        roles = await context.Roles.FirstOrDefaultAsync(m => m.Id == Id);

        if (roles is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    public async Task DeleteRoles()
    {
        using var context = DbFactory.CreateDbContext();
        context.Roles.Remove(roles!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/roles");
    }
}
